name: Release

on:
  push:
    tags: ['v*.*.*']

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            artifact_name: macos-x86_64
          - target: aarch64-apple-darwin  
            artifact_name: macos-arm64
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Verify build output
        run: ls -la target/${{ matrix.target }}/release/
      
      - name: Package artifact
        run: |
          mkdir -p release
          cp target/${{ matrix.target }}/release/zone-transfer-rs release/${{ matrix.artifact_name }}
          tar -czvf release/${{ matrix.artifact_name }}.tar.gz -C release ${{ matrix.artifact_name }}
      
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: release/${{ matrix.artifact_name }}.tar.gz

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - name: Create artifacts directory
        run: mkdir -p artifacts
      
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: List downloaded artifacts
        run: ls -la artifacts/
      
      - name: Prepare release assets
        run: |
          mkdir -p dist
          for f in artifacts/*.tar.gz; do
            tar -xzvf "$f" -C dist
          done
      
      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            dist/*
          draft: false
